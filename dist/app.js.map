{"version":3,"sources":["../app.js"],"names":["app","Koa","use","ctx","next","request","header","origin","constants","whiteList","includes","set","method","body","router","routes","allowedMethods","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AACA,MAAMA,MAAM,IAAIC,aAAJ,EAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,IAAIE,GAAJ,CAAQ,OAAMC,GAAN,EAAWC,IAAX,KAAoB;AACpB;AACA,QAAID,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,MAAnB,KAA8BJ,IAAII,MAAlC,IAA4CC,oBAAUC,SAAV,CAAoBC,QAApB,CAA6BP,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,MAAhD,CAAhD,EAAyG;AACrGJ,YAAIQ,GAAJ,CAAQ,6BAAR,EAAuCR,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,MAA1D;AACAJ,YAAIQ,GAAJ,CAAQ,kCAAR,EAA4C,IAA5C;AACAR,YAAIQ,GAAJ,CAAQ,cAAR,EAAwB,QAAxB;AACH;AACD,UAAMP,MAAN;AACH,CARL,EASKF,GATL,CASS,OAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrB;AACA,QAAID,IAAIS,MAAJ,KAAe,SAAnB,EAA8B;AAC1B;AACAT,YAAIQ,GAAJ,CAAQ,8BAAR,EAAwC,6BAAxC;AACA;AACAR,YAAIQ,GAAJ,CAAQ,gCAAR,EAAyC,2FAAzC;AACAR,YAAIU,IAAJ,GAAW,EAAX;AACH;AACD,UAAMT,MAAN;AACH,CAnBL,EAoBKF,GApBL,CAoBSY,gBAAOC,MAAP,EApBT,EAqBKb,GArBL,CAqBSY,gBAAOE,cAAP,EArBT;;AAuBAhB,IAAIiB,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBC,YAAQC,GAAR,CAAY,mBAAZ;AACH,CAFD","file":"app.js","sourcesContent":["import Koa from 'koa'\r\nimport router from './app/router/index'\r\nimport constants from './app/utils/constants'\r\nconst app = new Koa()\r\n// const db = require('./app/db/db')\r\n// indexRouter.get('/getOne', async(ctx,next) => {\r\n// app.get('/getOne', async(ctx,next) => {\r\n//     console.log('got getOne')\r\n//     // ctx.response.body = '恭喜 getOne'\r\n//     // ctx.body = {\r\n//     //   obj :'恭喜 getOne'\r\n//     // }\r\n//     if (ctx.request.accepts('xml')) {\r\n//     \tconsole.log('xml')\r\n// \t    ctx.response.type = 'xml';\r\n// \t    ctx.response.body = '<data>Hello World</data>';\r\n// \t  } else if (ctx.request.accepts('json')) {\r\n// \t  \tconsole.log('json')\r\n// \t    ctx.response.type = 'json';\r\n// \t    ctx.response.body = { data: 'Hello World' };\r\n// \t  } else if (ctx.request.accepts('html')) {\r\n// \t  \tconsole.log('html')\r\n// \t    ctx.response.type = 'html';\r\n// \t    ctx.response.body = '<p>Hello World</p>';\r\n// \t  } else {\r\n// \t  \t  \tconsole.log('text')\r\n// \t    ctx.response.type = 'text';\r\n// \t    ctx.response.body = 'Hello World';\r\n// \t  }\r\n// \t   await next();\r\n// });\r\n\r\napp.use(async(ctx, next) => {\r\n        // console.log('in 1')\r\n        if (ctx.request.header.origin !== ctx.origin && constants.whiteList.includes(ctx.request.header.origin)) {\r\n            ctx.set('Access-Control-Allow-Origin', ctx.request.header.origin);\r\n            ctx.set('Access-Control-Allow-Credentials', true);\r\n            ctx.set('X-Powered-By', ' 3.2.1'); \r\n        }\r\n        await next();\r\n    })\r\n    .use(async(ctx, next) => {\r\n        // console.log('OPTIONS 1')\r\n        if (ctx.method === 'OPTIONS') {\r\n            // console.log('OPTIONS 2')\r\n            ctx.set('Access-Control-Allow-Methods', 'PUT,DELETE,POST,GET,OPTIONS');\r\n            // ctx.set('Access-Control-Max-Age', 3600 * 24);\r\n            ctx.set('Access-Control-Request-Headers','Origin,Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With,Accept');\r\n            ctx.body = '';\r\n        }\r\n        await next();\r\n    })\r\n    .use(router.routes())\r\n    .use(router.allowedMethods())\r\n\r\napp.listen(3333, () => {\r\n    console.log('server is running')\r\n})"]}